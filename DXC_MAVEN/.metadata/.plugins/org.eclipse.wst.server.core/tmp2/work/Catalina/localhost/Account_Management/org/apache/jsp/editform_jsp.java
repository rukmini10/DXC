/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-05-09 18:58:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.dxc.RegisterDao;

public final class editform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.dxc.RegisterDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("    <!DOCTYPE html>  \r\n");
      out.write("    <html>  \r\n");
      out.write("    <head>  \r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">  \r\n");
      out.write("    <title>Edit Form</title>  \r\n");
      out.write("    </head>  \r\n");
      out.write("    <body style=\"background-image: url('https://cutewallpaper.org/21/hd-website-backgrounds/High-Resolution-Hd-Website-Background-Hd-Wallpapers-.jpg');\">  \r\n");
      out.write("       \r\n");
      com.dxc.Member member = null;
      member = (com.dxc.Member) _jspx_page_context.getAttribute("member", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (member == null){
        member = new com.dxc.Member();
        _jspx_page_context.setAttribute("member", member, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("    \r\n");
      out.write("    ");
  
    String Email=request.getParameter("Email");  
  
    
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("    <h1>Edit Form</h1>  \r\n");
      out.write("    <form action=\"updateMember.jsp\" method=\"post\">  \r\n");
      out.write("    <input type=\"hidden\" name=\"id\" value=\"");
      out.print(member.getEmail() );
      out.write("\"/>  \r\n");
      out.write("    <table>  \r\n");
      out.write("    <tr><td>User Name:</td><td>  \r\n");
      out.write("    <input type=\"text\" name=\"UserName\" value=\"");
      out.print( member.getUserName());
      out.write("\"/></td></tr>  \r\n");
      out.write("    <tr><td>Full Name</td><td>  \r\n");
      out.write("    <input type=\"text\" name=\"Full_Name\" value=\"");
      out.print( member.getFull_Name());
      out.write("\"/></td></tr>  \r\n");
      out.write("    <tr><td>Email Id:</td><td>  \r\n");
      out.write("    <input type=\"Email\" name=\"email\" value=\"");
      out.print( member.getEmail());
      out.write("\"/></td></tr>  \r\n");
      out.write("    <tr><td>Phone Number:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Phone_Number\" value=\"");
      out.print( member.getPhone_Number());
      out.write("\"/></td></tr>  \r\n");
      out.write("     <tr><td>Address:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Address\" value=\"");
      out.print( member.getAddress());
      out.write("\"/></td></tr> \r\n");
      out.write("   <tr><td>Pancard Number:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Pancard_Number\" value=\"");
      out.print( member.getPancard_Number());
      out.write("\"/></td></tr> \r\n");
      out.write("      <tr><td>Security Question:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Security_Question\" value=\"");
      out.print( member.getSecurity_Question());
      out.write("\"/></td></tr> \r\n");
      out.write("      <tr><td>Balance:</td><td>  \r\n");
      out.write("     <input type=\"number\" name=\"Balance\" value=\"");
      out.print( member.getBalance());
      out.write("\"/></td></tr> \r\n");
      out.write("       <tr><td>Account_Type:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Account_Type\" value=\"");
      out.print( member.getAccount_Type());
      out.write("\"/></td></tr> \r\n");
      out.write("       <tr><td>Opening Date:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Opening_Date\" value=\"");
      out.print( member.getOpening_Date());
      out.write("\"/></td></tr> \r\n");
      out.write("       <tr><td>Account Password:</td><td>  \r\n");
      out.write("     <input type=\"text\" name=\"Account_Password\" value=\"");
      out.print( member.getAccount_Password());
      out.write("\"/></td></tr> \r\n");
      out.write("     \r\n");
      out.write("    <tr><td colspan=\"2\"><input type=\"submit\" value=\"Edit User\"/></td></tr>  \r\n");
      out.write("    </table>  \r\n");
      out.write("    </form>  \r\n");
      out.write("      \r\n");
      out.write("    </body>  \r\n");
      out.write("    </html>  ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
